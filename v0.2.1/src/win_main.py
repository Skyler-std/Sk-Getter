# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

"""
 
author: Skyler Sun
create date: 2022-12-05 Monday
weather: small rain
script name: download.py

"""

import sys
import subprocess
import webbrowser
import re
from PyQt5 import QtCore, QtGui, QtWidgets
from subprocess import Popen, CREATE_NO_WINDOW

from win_setting import SettingWindow
from query import query_config
from showTk import showTk


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        self.folderPath = query_config('d/config/settings.json')['save_path']
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(481, 240)
        MainWindow.setMinimumSize(QtCore.QSize(10, 10))
        MainWindow.setMaximumSize(QtCore.QSize(9999, 9999))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("img/icon.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.VideoLabel = QtWidgets.QLabel(self.centralwidget)
        self.VideoLabel.setGeometry(QtCore.QRect(10, 30, 101, 51))
        self.VideoLabel.setObjectName("VideoLabel")
        self.DownloadVideoButton = QtWidgets.QPushButton(self.centralwidget)
        self.DownloadVideoButton.setGeometry(QtCore.QRect(380, 30, 81, 31))
        self.DownloadVideoButton.setObjectName("DownloadVideoButton")
        self.MusicLabel = QtWidgets.QLabel(self.centralwidget)
        self.MusicLabel.setGeometry(QtCore.QRect(10, 120, 101, 51))
        self.MusicLabel.setObjectName("MusicLabel")
        self.DownloadMusicButton = QtWidgets.QPushButton(self.centralwidget)
        self.DownloadMusicButton.setGeometry(QtCore.QRect(380, 120, 81, 31))
        self.DownloadMusicButton.setObjectName("DownloadMusicButton")
        self.VideoLinkInput = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.VideoLinkInput.setGeometry(QtCore.QRect(130, 20, 231, 71))
        self.VideoLinkInput.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.VideoLinkInput.setObjectName("VideoLinkInput")
        self.MusicLinkInput = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.MusicLinkInput.setGeometry(QtCore.QRect(130, 110, 231, 71))
        self.MusicLinkInput.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.MusicLinkInput.setObjectName("MusicLinkInput")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 481, 23))
        self.menubar.setObjectName("menubar")
        self.MenuSettings = QtWidgets.QMenu(self.menubar)
        self.MenuSettings.setToolTipsVisible(False)
        self.MenuSettings.setObjectName("MenuSettings")
        self.MenuHelp = QtWidgets.QMenu(self.menubar)
        self.MenuHelp.setObjectName("MenuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.ActionAbout = QtWidgets.QAction(MainWindow)
        self.ActionAbout.setObjectName("ActionAbout")
        self.ActionSettingDashborad = QtWidgets.QAction(MainWindow)
        self.ActionSettingDashborad.setIconVisibleInMenu(True)
        self.ActionSettingDashborad.setShortcutVisibleInContextMenu(True)
        self.ActionSettingDashborad.setObjectName("ActionSettingDashborad")
        self.ActionAddress = QtWidgets.QAction(MainWindow)
        self.ActionAddress.setObjectName("ActionAddress")
        self.ActionUpdateApi = QtWidgets.QAction(MainWindow)
        self.ActionUpdateApi.setObjectName("ActionUpdateApi")
        self.MenuSettings.addAction(self.ActionSettingDashborad)
        self.MenuSettings.addAction(self.ActionUpdateApi)
        self.MenuHelp.addAction(self.ActionAddress)
        self.MenuHelp.addSeparator()
        self.MenuHelp.addAction(self.ActionAbout)
        self.menubar.addAction(self.MenuSettings.menuAction())
        self.menubar.addAction(self.MenuHelp.menuAction())

        # 设置默认显示文字
        self.VideoLinkInput.setPlaceholderText('请输入视频链接')
        self.MusicLinkInput.setPlaceholderText('请输入歌曲链接')
        # 信号连接
        self.ActionAbout.triggered.connect(self.about)
        self.ActionAddress.triggered.connect(self.about)
        self.ActionSettingDashborad.triggered.connect(self.setting)
        self.ActionUpdateApi.triggered.connect(self.update_own)
        self.DownloadMusicButton.clicked.connect(self.D_music)
        self.DownloadVideoButton.clicked.connect(self.D_video)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Sk Getter"))
        self.VideoLabel.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:11pt;\">下载视频</span></p></body></html>"))
        self.DownloadVideoButton.setText(_translate("MainWindow", "开始下载"))
        self.MusicLabel.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:11pt;\">下载歌曲</span></p></body></html>"))
        self.DownloadMusicButton.setText(_translate("MainWindow", "开始下载"))
        self.MenuSettings.setTitle(_translate("MainWindow", "设置"))
        self.MenuHelp.setTitle(_translate("MainWindow", "帮助"))
        self.ActionAbout.setText(_translate("MainWindow", "关于"))
        self.ActionSettingDashborad.setText(_translate("MainWindow", "全局设置"))
        self.ActionAddress.setText(_translate("MainWindow", "源码地址"))
        self.ActionUpdateApi.setText(_translate("MainWindow", "更新软件"))

    def about(self):
        """打开浏览器访问主页"""
        url = 'https://gitee.com/skyler-sun/sk-getter'
        webbrowser.open(url)

    def setting(self):
        """打开设置窗口"""
        SettingWindow.show()

    def update_own(self):
        """更新软件"""
        #TODO:更新软件
        pass

    def D_music(self):
        """下载音乐"""
        self.folderPath = query_config('d/config/settings.json')['save_path']
        self.musicUrl = self.MusicLinkInput.toPlainText()
        if self.musicUrl == '':
            showTk(1, '警告', '@^_^@歌曲链接不能为空')
        elif re.match('https://music.163.com', self.musicUrl):
            # 判断为网易云音乐链接
            Popen(f'd/download.exe cloudmusic "{self.musicUrl}" {self.folderPath}', creationflags=CREATE_NO_WINDOW)
    
    def open_save(self):
        """打开保存位置"""
        self.folderPath = self.folderPath.replace('/', '\\')
        subprocess.Popen(f'explorer.exe {self.folderPath}', creationflags=CREATE_NO_WINDOW)
    
    def D_video(self):
        """下载视频"""
        self.folderPath = query_config('d/config/settings.json')['save_path']
        self.videoUrl = self.VideoLinkInput.toPlainText()
        if self.videoUrl == '':
            showTk(1, '警告', '@^_^@ 视频链接不能为空')
        elif re.match('https://www.bilibili.com', self.videoUrl):
            # 判断为bilibili链接
            Popen(f'd/download.exe bilibili "{self.videoUrl}" {self.folderPath}', creationflags=CREATE_NO_WINDOW)
        elif re.match('https://v.qq.com', self.videoUrl):
            # 判断为腾讯视频链接
            showTk(0, '提示', '@6_6@ 腾讯视频的VIP视频下载过程较复杂,请确保已经查看"帮助"->"软件地址"的教程并进行相关配置后继续,软件无响应是因为正在处理请求,请耐心等待,若长时间未响应,请重启软件重试')
            Popen(f'd/download.exe tencent "{self.videoUrl}" {self.folderPath}', creationflags=CREATE_NO_WINDOW)


app = QtWidgets.QApplication(sys.argv)
MainWindow = QtWidgets.QMainWindow()
with open('style.qss') as f:
    style = f.read()
MainWindow.setStyleSheet(style)
ui = Ui_MainWindow()
ui.setupUi(MainWindow)
